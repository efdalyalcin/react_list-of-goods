{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","lengths","App","state","goods","isStarted","isReversed","sortBy","selection","start","setState","hide","reverse","sortByAlpha","sortByLength","reset","this","visibleGoods","sort","a","b","localeCompare","length","className","type","onClick","htmlFor","name","value","onChange","event","Number","currentTarget","map","num","filter","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAUhDC,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMJ,GACXK,WAAW,EACXC,YAAY,EACZC,OAAQ,OACRC,UAAW,G,EAGbC,MAAQ,WACN,EAAKC,SAAS,CAAEL,WAAW,K,EAG7BM,KAAO,kBAAO,EAAKD,UAAS,SAAAP,GAAK,MAC/B,CACEE,WAAYF,EAAME,UAClBC,YAAY,EACZC,OAAQ,OACRC,UAAW,O,EAIfI,QAAU,WACR,EAAKF,UAAS,SAACP,GAAD,MACZ,CAAEG,YAAaH,EAAMG,gB,EAIzBO,YAAc,WACZ,EAAKH,SAAS,CAAEH,OAAQ,U,EAG1BO,aAAe,WACb,EAAKJ,SAAS,CAAEH,OAAQ,Y,EAG1BQ,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,OAAQ,OACRC,UAAW,K,4CAIf,WAA2B,IAAD,OACxB,EAMIQ,KAAKb,MALPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,UAGES,EAAY,YAAOb,GAGvB,OAAQG,GACN,IAAK,OACHU,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC7C,MACF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEG,OAASF,EAAEE,UAC1C,MACF,QACGL,EAAY,YAAOb,GAOxB,OAJIE,GACFW,EAAaL,UAIb,qBAAKW,UAAU,cAAf,SACE,sBAAKA,UAAU,wCAAf,UAKE,oBAAIA,UAAU,aAAd,mBAEA,qBAAKA,UAAU,aAAf,UACIlB,GACA,wBACEmB,KAAK,SACLD,UAAU,yDAIVE,QAAST,KAAKP,MANhB,qBAaJ,gCACE,uBAAOiB,QAAQ,eAAf,qCACA,wBACEC,KAAK,eACLC,MAAOpB,EACPqB,SAAU,SAACC,GACT,EAAKpB,SAAS,CACZF,UAAWuB,OAAOD,EAAME,cAAcJ,UAL5C,SASG3B,EAAQgC,KAAI,SAAAC,GAAG,OACd,wBAAkBN,MAAOM,EAAzB,SAA+BA,GAAlBA,WAKnB,wBACEV,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKJ,QAHhB,qBAQA,wBACEY,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKH,YAHhB,iCAQA,wBACEW,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKD,MAHhB,mBAQA,wBACES,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKF,aAHhB,4BAQCT,GACC,qBAAIkB,UAAU,kDAAd,UAME,oBAAIA,UAAU,aAAd,yBAEEN,EACGkB,QApGQ,SAACC,GAAD,OAAkBA,EAAKd,QAAUd,KAqGzCyB,KAAI,SAACG,GAAD,OACH,6BACGA,GADMA,SAQnB,qBAAKb,UAAU,aAAf,SACGlB,GACC,wBACEmB,KAAK,SACLD,UAAU,wDAIVE,QAAST,KAAKL,KANhB,6B,GAtKI0B,IAAMC,WAwLTpC,IC/MfqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84f20b26.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst lengths: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ninterface State {\n  goods: string[];\n  isStarted: boolean;\n  isReversed: boolean;\n  sortBy: 'none' | 'name' | 'length';\n  selection: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    sortBy: 'none',\n    selection: 1,\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  hide = () => (this.setState(state => (\n    {\n      isStarted: !state.isStarted,\n      isReversed: false,\n      sortBy: 'none',\n      selection: 1,\n    }\n  )));\n\n  reverse = () => {\n    this.setState((state) => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  sortByAlpha = () => {\n    this.setState({ sortBy: 'name' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: 'none',\n      selection: 1,\n    });\n  };\n\n  render(): React.ReactNode {\n    const {\n      goods,\n      isStarted,\n      isReversed,\n      sortBy,\n      selection,\n    } = this.state;\n\n    let visibleGoods = [...goods];\n    const filterByLength = (good: string) => good.length >= selection;\n\n    switch (sortBy) {\n      case 'name':\n        visibleGoods.sort((a, b) => (a.localeCompare(b)));\n        break;\n      case 'length':\n        visibleGoods.sort((a, b) => (a.length - b.length));\n        break;\n      default:\n        (visibleGoods = [...goods]);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App columns\">\n        <div className=\"\n          column\n          is-half\n          is-offset-one-quarter\"\n        >\n          <h1 className=\"title is-1\">Goods</h1>\n\n          <div className=\"App__start\">\n            {!isStarted && (\n              <button\n                type=\"button\"\n                className=\"button\n                  is-success column\n                  is-offset-one-quarter\n                  is-half\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"select-field\">Select minimum length: </label>\n            <select\n              name=\"select-field\"\n              value={selection}\n              onChange={(event) => {\n                this.setState({\n                  selection: Number(event.currentTarget.value),\n                });\n              }}\n            >\n              {lengths.map(num => (\n                <option key={num} value={num}>{num}</option>\n              ))}\n            </select>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.sortByAlpha}\n          >\n            Sort Alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.sortByLength}\n          >\n            Sort by Length\n          </button>\n\n          {isStarted && (\n            <ul className=\"\n              App__list\n              column\n              is-half\n              is-offset-one-quarter\"\n            >\n              <h2 className=\"title is-3\">Goods List:</h2>\n              {\n                visibleGoods\n                  .filter(filterByLength)\n                  .map((good) => (\n                    <li key={good}>\n                      {good}\n                    </li>\n                  ))\n              }\n            </ul>\n          )}\n\n          <div className=\"App__start\">\n            {isStarted && (\n              <button\n                type=\"button\"\n                className=\"button\n                  is-danger column\n                  is-offset-one-quarter\n                  is-half\"\n                onClick={this.hide}\n              >\n                Hide\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}