{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","lengths","App","state","goods","isStarted","isReversed","sortBy","none","selection","reverse","setState","sortByName","name","sortByLength","length","reset","start","toggleVisibility","hideAndReset","this","visibleGoods","sort","a","b","localeCompare","className","type","onClick","htmlFor","value","onChange","event","Number","currentTarget","map","num","filter","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,kFAfCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,SAEjDF,O,eAAAA,I,eAAAA,I,oBAAAA,M,SAcCG,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMJ,GACXK,WAAW,EACXC,YAAY,EACZC,OAAQR,EAAOS,KACfC,UAAW,G,EAGbC,QAAU,WACR,EAAKC,UAAS,SAACR,GAAD,MACZ,CAAEG,YAAaH,EAAMG,gB,EAIzBM,WAAa,WACX,EAAKD,SAAS,CAAEJ,OAAQR,EAAOc,Q,EAGjCC,aAAe,WACb,EAAKH,SAAS,CAAEJ,OAAQR,EAAOgB,U,EAGjCC,MAAQ,WACN,EAAKL,SAAS,CACZL,YAAY,EACZC,OAAQR,EAAOS,KACfC,UAAW,K,EAIfQ,MAAQ,WACN,EAAKN,SAAS,CAAEN,WAAW,K,EAG7Ba,iBAAmB,kBAAO,EAAKP,UAAS,SAAAR,GAAK,MAC3C,CAAEE,WAAYF,EAAME,e,EAGtBc,aAAe,WACb,EAAKH,QACL,EAAKE,oB,4CAGP,WAA2B,IAAD,OACxB,EAMIE,KAAKjB,MALPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OACAE,EALF,EAKEA,UAGEY,EAAY,YAAOjB,GAGvB,OAAQG,GACN,KAAKR,EAAOc,KACVQ,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC7C,MACF,KAAKzB,EAAOgB,OACVM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAER,OAASS,EAAET,UAC1C,MACF,QACGM,EAAY,YAAOjB,GAOxB,OAJIE,GACFe,EAAaX,UAIb,qBAAKgB,UAAU,cAAf,SACE,sBAAKA,UAAU,8CAAf,UAKE,oBAAIA,UAAU,aAAd,mBAEA,qBAAKA,UAAU,aAAf,UACIrB,GACA,wBACEsB,KAAK,SACLD,UAAU,wCAIVE,QAASR,KAAKH,MANhB,qBAaJ,gCACE,uBAAOY,QAAQ,eAAf,qCACA,wBACEhB,KAAK,eACLiB,MAAOrB,EACPsB,SAAU,SAACC,GACT,EAAKrB,SAAS,CACZF,UAAWwB,OAAOD,EAAME,cAAcJ,UAL5C,SASG7B,EAAQkC,KAAI,SAAAC,GAAG,OACd,wBAAkBN,MAAOM,EAAzB,SAA+BA,GAAlBA,WAKnB,gCACE,wBACET,KAAK,SACLD,UAAU,iBACVE,QAASR,KAAKV,QAHhB,qBAQA,wBACEiB,KAAK,SACLD,UAAU,iBACVE,QAASR,KAAKR,WAHhB,iCAQA,wBACEe,KAAK,SACLD,UAAU,iBACVE,QAASR,KAAKJ,MAHhB,mBAQA,wBACEW,KAAK,SACLD,UAAU,iBACVE,QAASR,KAAKN,aAHhB,+BASDT,GACC,qBAAIqB,UAAU,4BAAd,UAGE,oBAAIA,UAAU,aAAd,yBAEEL,EACGgB,QAnGQ,SAACC,GAAD,OAAkBA,EAAKvB,QAAUN,KAoGzC0B,KAAI,SAACG,GAAD,OACH,6BACGA,GADMA,SAQnB,qBAAKZ,UAAU,aAAf,SACGrB,GACC,wBACEsB,KAAK,SACLD,UAAU,uCAGVE,QAASR,KAAKD,aALhB,6B,GArKIoB,IAAMC,WAsLTtC,ICnNfuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d76432a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst lengths: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\ninterface State {\n  goods: string[];\n  isStarted: boolean;\n  isReversed: boolean;\n  sortBy: SortBy;\n  selection: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    sortBy: SortBy.none,\n    selection: 1,\n  };\n\n  reverse = () => {\n    this.setState((state) => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  sortByName = () => {\n    this.setState({ sortBy: SortBy.name });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: SortBy.length });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortBy.none,\n      selection: 1,\n    });\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  toggleVisibility = () => (this.setState(state => (\n    { isStarted: !state.isStarted }\n  )));\n\n  hideAndReset = () => {\n    this.reset();\n    this.toggleVisibility();\n  };\n\n  render(): React.ReactNode {\n    const {\n      goods,\n      isStarted,\n      isReversed,\n      sortBy,\n      selection,\n    } = this.state;\n\n    let visibleGoods = [...goods];\n    const filterByLength = (good: string) => good.length >= selection;\n\n    switch (sortBy) {\n      case SortBy.name:\n        visibleGoods.sort((a, b) => (a.localeCompare(b)));\n        break;\n      case SortBy.length:\n        visibleGoods.sort((a, b) => (a.length - b.length));\n        break;\n      default:\n        (visibleGoods = [...goods]);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App columns\">\n        <div className=\"\n          column\n          is-three-fifths\n          is-offset-one-fifth\"\n        >\n          <h1 className=\"title is-1\">Goods</h1>\n\n          <div className=\"App__start\">\n            {!isStarted && (\n              <button\n                type=\"button\"\n                className=\"button\n                  is-success\n                  column\n                  is-one-fifth\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"select-field\">Select minimum length: </label>\n            <select\n              name=\"select-field\"\n              value={selection}\n              onChange={(event) => {\n                this.setState({\n                  selection: Number(event.currentTarget.value),\n                });\n              }}\n            >\n              {lengths.map(num => (\n                <option key={num} value={num}>{num}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.sortByName}\n            >\n              Sort Alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.sortByLength}\n            >\n              Sort by Length\n            </button>\n          </div>\n\n          {isStarted && (\n            <ul className=\"\n              App__list column is-full\"\n            >\n              <h2 className=\"title is-3\">Goods List:</h2>\n              {\n                visibleGoods\n                  .filter(filterByLength)\n                  .map((good) => (\n                    <li key={good}>\n                      {good}\n                    </li>\n                  ))\n              }\n            </ul>\n          )}\n\n          <div className=\"App__start\">\n            {isStarted && (\n              <button\n                type=\"button\"\n                className=\"button\n                  is-danger column\n                  is-one-fifth\"\n                onClick={this.hideAndReset}\n              >\n                Hide\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}