{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isStarted","isReversed","sortBy","start","setState","reverse","sortByAlpha","sortByLength","reset","this","visibleGoods","sort","a","b","localeCompare","length","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAe,CACbC,MAAM,GAAD,OAAMH,GACXI,WAAW,EACXC,YAAY,EACZC,OAAQ,Q,EAGVC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,WAAW,K,EAG7BK,QAAU,WACR,EAAKD,UAAS,SAACN,GAAD,MACZ,CAAEG,YAAaH,EAAMG,gB,EAIzBK,YAAc,WACZ,EAAKF,SAAS,CAAEF,OAAQ,U,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,MAAQ,WACN,EAAKJ,SAAS,CAAEH,YAAY,EAAOC,OAAQ,U,4CAG7C,WACE,MAKIO,KAAKX,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAGEQ,EAAY,YAAOX,GAEvB,OAAQG,GACN,IAAK,OACHQ,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC7C,MACF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEG,OAASF,EAAEE,UAC1C,MACF,QACGL,EAAY,YAAOX,GAOxB,OAJIE,GACFS,EAAaL,UAIb,qBAAKW,UAAU,cAAf,SACE,sBAAKA,UAAU,wCAAf,UAKE,oBAAIA,UAAU,aAAd,mBAEA,qBAAKA,UAAU,aAAf,UACIhB,GACA,wBACEiB,KAAK,SACLD,UAAU,oBACVE,QAAST,KAAKN,MAHhB,qBAUJ,wBACEc,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKJ,QAHhB,qBAQA,wBACEY,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKH,YAHhB,iCAQA,wBACEW,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKD,MAHhB,mBAQA,wBACES,KAAK,SACLD,UAAU,iBACVE,QAAST,KAAKF,aAHhB,4BAQCP,GACC,qBAAIgB,UAAU,wCAAd,UAKE,oBAAIA,UAAU,aAAd,yBAECN,EAAaS,KAAI,SAACC,GAAD,OAChB,6BACGA,GADMA,kB,GArHPC,IAAMC,WAiITzB,ICrJf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e797ff1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  isStarted: boolean;\n  isReversed: boolean;\n  sortBy: 'none' | 'name' | 'length';\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    sortBy: 'none',\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  reverse = () => {\n    this.setState((state) => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  sortByAlpha = () => {\n    this.setState({ sortBy: 'name' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortBy: 'none' });\n  };\n\n  render(): React.ReactNode {\n    const {\n      goods,\n      isStarted,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    let visibleGoods = [...goods];\n\n    switch (sortBy) {\n      case 'name':\n        visibleGoods.sort((a, b) => (a.localeCompare(b)));\n        break;\n      case 'length':\n        visibleGoods.sort((a, b) => (a.length - b.length));\n        break;\n      default:\n        (visibleGoods = [...goods]);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App columns\">\n        <div className=\"\n          column\n          is-half\n          is-offset-one-quarter\"\n        >\n          <h1 className=\"title is-1\">Goods</h1>\n\n          <div className=\"App__start\">\n            {!isStarted && (\n              <button\n                type=\"button\"\n                className=\"button is-success\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n            )}\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.sortByAlpha}\n          >\n            Sort Alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-info\"\n            onClick={this.sortByLength}\n          >\n            Sort by Length\n          </button>\n\n          {isStarted && (\n            <ul className=\"\n              column\n              is-half\n              is-offset-one-quarter\"\n            >\n              <h2 className=\"title is-3\">Goods List:</h2>\n\n              {visibleGoods.map((good) => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}